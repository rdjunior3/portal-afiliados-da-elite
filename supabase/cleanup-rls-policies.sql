-- ============================================
-- LIMPEZA DE POL√çTICAS RLS CONFLITANTES
-- Execute no dashboard do Supabase para remover duplicatas
-- ============================================

-- ============================================
-- 1. REMOVER POL√çTICAS ANTIGAS DE PRODUCTS
-- ============================================

-- Manter apenas as pol√≠ticas granulares novas
DROP POLICY IF EXISTS "Allow admin management on products" ON products;
DROP POLICY IF EXISTS "Allow authenticated read access on products" ON products;
DROP POLICY IF EXISTS "Anyone can view active products" ON products;
DROP POLICY IF EXISTS "Authenticated users manage products" ON products;

-- ============================================
-- 2. REMOVER POL√çTICAS ANTIGAS DE PROFILES
-- ============================================

-- Manter apenas as pol√≠ticas granulares novas
DROP POLICY IF EXISTS "Authenticated users can view profiles" ON profiles;
DROP POLICY IF EXISTS "Public profiles are viewable by everyone" ON profiles;
DROP POLICY IF EXISTS "Users can insert their own profile" ON profiles;
DROP POLICY IF EXISTS "Users can update their own profile" ON profiles;
DROP POLICY IF EXISTS "users_can_update_own_profile" ON profiles;

-- ============================================
-- 3. ADICIONAR POL√çTICA DE INSERT PARA PROFILES (se necess√°rio)
-- ============================================

-- Pol√≠tica para cria√ß√£o de perfis (necess√°ria para novos usu√°rios)
CREATE POLICY "profiles_insert_own" ON profiles
    FOR INSERT TO authenticated
    WITH CHECK (id = auth.uid());

-- ============================================
-- 4. VERIFICA√á√ÉO FINAL DAS POL√çTICAS ATIVAS
-- ============================================

-- Listar pol√≠ticas finais (deve mostrar apenas as granulares)
SELECT 
    schemaname,
    tablename,
    policyname,
    cmd,
    CASE 
        WHEN policyname LIKE '%hierarchical%' OR policyname LIKE '%role_based%' OR policyname LIKE '%admin_%' OR policyname LIKE '%superadmin_%' THEN '‚úÖ GRANULAR'
        WHEN policyname LIKE '%insert_own%' THEN '‚úÖ NECESS√ÅRIA'
        ELSE '‚ö†Ô∏è REVISAR'
    END as status
FROM pg_policies 
WHERE tablename IN ('profiles', 'products')
ORDER BY tablename, policyname;

-- ============================================
-- 5. RESUMO DO RESULTADO ESPERADO
-- ============================================

/*
POL√çTICAS FINAIS ESPERADAS:

PROFILES:
- profiles_hierarchical_view (SELECT) ‚úÖ
- profiles_hierarchical_update (UPDATE) ‚úÖ  
- profiles_insert_own (INSERT) ‚úÖ

PRODUCTS:
- products_role_based_view (SELECT) ‚úÖ
- products_admin_insert (INSERT) ‚úÖ
- products_admin_update (UPDATE) ‚úÖ
- products_superadmin_delete (DELETE) ‚úÖ

TOTAL: 7 pol√≠ticas granulares funcionais
*/

-- Verificar se chegamos ao n√∫mero correto
DO $$
DECLARE
    total_policies INTEGER;
    granular_policies INTEGER;
BEGIN
    -- Contar total de pol√≠ticas
    SELECT COUNT(*) INTO total_policies 
    FROM pg_policies 
    WHERE tablename IN ('profiles', 'products');
    
    -- Contar pol√≠ticas granulares
    SELECT COUNT(*) INTO granular_policies 
    FROM pg_policies 
    WHERE tablename IN ('profiles', 'products')
    AND (
        policyname LIKE '%hierarchical%' OR 
        policyname LIKE '%role_based%' OR 
        policyname LIKE '%admin_%' OR 
        policyname LIKE '%superadmin_%' OR
        policyname LIKE '%insert_own%'
    );
    
    RAISE NOTICE 'Total de pol√≠ticas: %, Pol√≠ticas granulares: %', total_policies, granular_policies;
    
    IF total_policies = granular_policies AND total_policies = 7 THEN
        RAISE NOTICE 'üéâ SUCESSO! Apenas pol√≠ticas granulares est√£o ativas.';
    ELSIF granular_policies = 7 AND total_policies > 7 THEN
        RAISE WARNING '‚ö†Ô∏è Pol√≠ticas granulares OK, mas ainda h√° % pol√≠ticas extras que podem causar conflitos.', (total_policies - granular_policies);
    ELSE
        RAISE WARNING '‚ùå Configura√ß√£o incompleta. Verifique as pol√≠ticas manualmente.';
    END IF;
END $$; 