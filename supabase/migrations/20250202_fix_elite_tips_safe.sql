-- =====================================================
-- Migra√ß√£o Segura para Resolver Conflitos Elite Tips
-- =====================================================

-- Esta migra√ß√£o √© projetada para ser executada mesmo quando 
-- h√° conflitos ou estruturas parcialmente criadas

-- 1. Verificar e criar fun√ß√£o de update_updated_at se n√£o existir
CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = NOW();
    RETURN NEW;
END;
$$ language 'plpgsql';

-- 2. Criar tabela elite_tips apenas se n√£o existir
DO $$
BEGIN
    IF NOT EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'elite_tips') THEN
        CREATE TABLE elite_tips (
            id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
            title TEXT NOT NULL,
            content TEXT NOT NULL,
            icon TEXT DEFAULT 'üí°',
            order_index INTEGER DEFAULT 0,
            is_active BOOLEAN DEFAULT true,
            created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
            updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
            created_by UUID REFERENCES profiles(id),
            updated_by UUID REFERENCES profiles(id)
        );
        
        RAISE NOTICE '‚úÖ Tabela elite_tips criada com sucesso';
    ELSE
        RAISE NOTICE '‚ö†Ô∏è Tabela elite_tips j√° existe - ignorando cria√ß√£o';
    END IF;
END $$;

-- 3. Criar √≠ndices apenas se n√£o existirem
DO $$
BEGIN
    -- √çndice para is_active
    IF NOT EXISTS (SELECT 1 FROM pg_indexes WHERE indexname = 'idx_elite_tips_active') THEN
        CREATE INDEX idx_elite_tips_active ON elite_tips(is_active);
        RAISE NOTICE '‚úÖ √çndice idx_elite_tips_active criado';
    ELSE
        RAISE NOTICE '‚ö†Ô∏è √çndice idx_elite_tips_active j√° existe';
    END IF;
    
    -- √çndice para order_index
    IF NOT EXISTS (SELECT 1 FROM pg_indexes WHERE indexname = 'idx_elite_tips_order') THEN
        CREATE INDEX idx_elite_tips_order ON elite_tips(order_index);
        RAISE NOTICE '‚úÖ √çndice idx_elite_tips_order criado';
    ELSE
        RAISE NOTICE '‚ö†Ô∏è √çndice idx_elite_tips_order j√° existe';
    END IF;
END $$;

-- 4. Criar trigger apenas se n√£o existir
DO $$
BEGIN
    IF NOT EXISTS (SELECT 1 FROM pg_trigger WHERE tgname = 'update_elite_tips_updated_at') THEN
        CREATE TRIGGER update_elite_tips_updated_at
            BEFORE UPDATE ON elite_tips
            FOR EACH ROW
            EXECUTE FUNCTION update_updated_at_column();
        RAISE NOTICE '‚úÖ Trigger update_elite_tips_updated_at criado';
    ELSE
        RAISE NOTICE '‚ö†Ô∏è Trigger update_elite_tips_updated_at j√° existe';
    END IF;
END $$;

-- 5. Habilitar RLS (idempotente)
ALTER TABLE elite_tips ENABLE ROW LEVEL SECURITY;

-- 6. Recriar pol√≠ticas RLS (drop + create)
DO $$
BEGIN
    -- Remover pol√≠ticas existentes
    DROP POLICY IF EXISTS "Usu√°rios autenticados podem ver dicas ativas" ON elite_tips;
    DROP POLICY IF EXISTS "Admin tem acesso total a dicas" ON elite_tips;
    
    -- Criar pol√≠tica para visualiza√ß√£o
    CREATE POLICY "Usu√°rios autenticados podem ver dicas ativas" ON elite_tips
        FOR SELECT
        USING (
            is_active = true AND
            auth.role() = 'authenticated'
        );
    
    -- Criar pol√≠tica para admin
    CREATE POLICY "Admin tem acesso total a dicas" ON elite_tips
        FOR ALL
        USING (
            EXISTS (
                SELECT 1 FROM profiles 
                WHERE profiles.id = auth.uid() 
                AND profiles.role IN ('admin', 'super_admin')
            )
        );
    
    RAISE NOTICE '‚úÖ Pol√≠ticas RLS recriadas com sucesso';
END $$;

-- 7. Inserir dados padr√£o apenas se a tabela estiver vazia
DO $$
DECLARE
    tip_count INTEGER;
BEGIN
    SELECT COUNT(*) INTO tip_count FROM elite_tips;
    
    IF tip_count = 0 THEN
        INSERT INTO elite_tips (title, content, icon, order_index, is_active) VALUES
        ('Complete seu perfil', 'Complete seu perfil para desbloquear recursos premium exclusivos', 'üèÜ', 1, true),
        ('Explore produtos premium', 'Explore nossos produtos com as maiores comiss√µes do mercado', 'üí∞', 2, true),
        ('Participe das capacita√ß√µes', 'Participe das aulas de capacita√ß√£o para aumentar suas vendas', 'üìö', 3, true);
        
        RAISE NOTICE '‚úÖ Dicas padr√£o inseridas (%s registros)', tip_count;
    ELSE
        RAISE NOTICE '‚ö†Ô∏è Tabela j√° cont√©m % registros - ignorando inser√ß√£o', tip_count;
    END IF;
END $$;

-- 8. Verifica√ß√£o final
DO $$
DECLARE
    total_tips INTEGER;
    total_indices INTEGER;
BEGIN
    -- Contar dicas
    SELECT COUNT(*) INTO total_tips FROM elite_tips;
    
    -- Contar √≠ndices
    SELECT COUNT(*) INTO total_indices 
    FROM pg_indexes 
    WHERE tablename = 'elite_tips' 
    AND indexname IN ('idx_elite_tips_active', 'idx_elite_tips_order');
    
    RAISE NOTICE 'üéâ MIGRA√á√ÉO CONCLU√çDA:';
    RAISE NOTICE '   - Dicas na tabela: %', total_tips;
    RAISE NOTICE '   - √çndices criados: %/2', total_indices;
    RAISE NOTICE '   - RLS habilitado: ‚úÖ';
    RAISE NOTICE '   - Pol√≠ticas ativas: ‚úÖ';
END $$; 