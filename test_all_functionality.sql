-- =====================================================
-- SCRIPT DE TESTE: Validar Todas as Funcionalidades
-- Data: 2025-01-30
-- Objetivo: Testar completude do perfil e upload de imagens
-- =====================================================

-- 1. TESTAR ATUALIZA√á√ÉO DE PERFIL (simular CompleteProfile)
SELECT 'üß™ TESTE 1: Atualizando perfil com campos corretos' as teste;

-- Simular o que o CompleteProfile faz
UPDATE profiles 
SET 
  first_name = COALESCE(first_name, 'Usuario'),
  last_name = COALESCE(last_name, 'Teste'),
  full_name = COALESCE(first_name, 'Usuario') || ' ' || COALESCE(last_name, 'Teste'),
  phone = COALESCE(phone, '(11) 99999-9999'),
  affiliate_code = COALESCE(affiliate_code, 'usuarioteste' || EXTRACT(EPOCH FROM NOW())::text),
  affiliate_status = 'approved',
  onboarding_completed_at = NOW()
WHERE id = auth.uid()
AND onboarding_completed_at IS NULL;

-- Verificar resultado
SELECT 
  '‚úÖ Perfil atualizado:' as resultado,
  first_name,
  last_name,
  full_name,
  phone,
  affiliate_code,
  affiliate_status,
  onboarding_completed_at
FROM profiles 
WHERE id = auth.uid();

-- 2. TESTAR PERMISS√ïES DE STORAGE
SELECT 'üß™ TESTE 2: Verificando permiss√µes de upload' as teste;

-- Simular tentativa de upload para products (s√≥ admins)
SELECT 
  CASE 
    WHEN role = ANY(ARRAY['admin'::user_role, 'super_admin'::user_role]) 
    THEN '‚úÖ PODE fazer upload em products (√© admin)'
    ELSE '‚ùå N√ÉO PODE fazer upload em products (n√£o √© admin)'
  END as status_products,
  '‚úÖ PODE fazer upload em avatars (usu√°rio autenticado)' as status_avatars,
  role as seu_role
FROM profiles 
WHERE id = auth.uid();

-- 3. TESTAR GERA√á√ÉO DE AFFILIATE_CODE
SELECT 'üß™ TESTE 3: Testando gera√ß√£o autom√°tica de affiliate_code' as teste;

-- Verificar se o trigger funciona
INSERT INTO profiles (id, email, first_name, last_name)
VALUES (
  gen_random_uuid(),
  'teste' || EXTRACT(EPOCH FROM NOW()) || '@exemplo.com',
  'Teste',
  'Automatico'
)
ON CONFLICT (email) DO NOTHING;

-- Mostrar √∫ltimo perfil criado
SELECT 
  '‚úÖ Affiliate code gerado automaticamente:' as resultado,
  email,
  affiliate_code,
  created_at
FROM profiles 
WHERE created_at > NOW() - INTERVAL '1 minute'
ORDER BY created_at DESC
LIMIT 1;

-- 4. TESTAR ESTRUTURA DE CAMPOS NECESS√ÅRIOS
SELECT 'üß™ TESTE 4: Verificando campos essenciais na tabela profiles' as teste;

SELECT 
  CASE 
    WHEN COUNT(*) >= 3 THEN '‚úÖ Campos essenciais existem'
    ELSE '‚ùå Faltam campos essenciais'
  END as status_campos
FROM information_schema.columns 
WHERE table_name = 'profiles' 
AND table_schema = 'public'
AND column_name IN ('onboarding_completed_at', 'affiliate_code', 'affiliate_status');

-- 5. TESTAR POL√çTICAS DE STORAGE
SELECT 'üß™ TESTE 5: Verificando pol√≠ticas de storage' as teste;

SELECT 
  CASE 
    WHEN COUNT(*) >= 2 THEN '‚úÖ Pol√≠ticas INSERT existem para produtos e avatars'
    ELSE '‚ùå Faltam pol√≠ticas INSERT'
  END as status_politicas
FROM pg_policies 
WHERE tablename = 'objects' 
AND schemaname = 'storage'
AND cmd = 'INSERT'
AND (qual LIKE '%products%' OR qual LIKE '%avatars%');

-- 6. TESTAR BUCKETS P√öBLICOS
SELECT 'üß™ TESTE 6: Verificando buckets p√∫blicos' as teste;

SELECT 
  id as bucket,
  CASE 
    WHEN public = true THEN '‚úÖ P√∫blico'
    ELSE '‚ùå Privado'
  END as status_publico,
  file_size_limit as limite_mb
FROM storage.buckets 
WHERE id IN ('products', 'avatars')
ORDER BY id;

-- 7. RESUMO FINAL DOS TESTES
SELECT 'üìä RESUMO FINAL DOS TESTES:' as secao;

SELECT 
  'Perfil' as funcionalidade,
  CASE 
    WHEN EXISTS (
      SELECT 1 FROM profiles 
      WHERE id = auth.uid() 
      AND onboarding_completed_at IS NOT NULL
      AND affiliate_code IS NOT NULL
    ) 
    THEN '‚úÖ FUNCIONANDO'
    ELSE '‚ùå COM PROBLEMAS'
  END as status;

SELECT 
  'Upload Storage' as funcionalidade,
  CASE 
    WHEN (
      SELECT COUNT(*) 
      FROM pg_policies 
      WHERE tablename = 'objects' 
      AND cmd = 'INSERT'
      AND qual LIKE '%products%'
    ) > 0 
    THEN '‚úÖ FUNCIONANDO'
    ELSE '‚ùå COM PROBLEMAS'
  END as status;

SELECT 
  'Buckets P√∫blicos' as funcionalidade,
  CASE 
    WHEN (
      SELECT COUNT(*) 
      FROM storage.buckets 
      WHERE id IN ('products', 'avatars') 
      AND public = true
    ) = 2 
    THEN '‚úÖ FUNCIONANDO'
    ELSE '‚ùå COM PROBLEMAS'
  END as status;

-- 8. INSTRU√á√ïES FINAIS
SELECT 'üéØ PR√ìXIMOS PASSOS PARA TESTAR:' as instrucoes;

SELECT '1. Complete Profile: Tente preencher e salvar o perfil' as passo_1;
SELECT '2. Upload Avatar: Tente fazer upload de uma foto de perfil' as passo_2;
SELECT '3. Upload Produto: (Se for admin) Tente criar um produto com imagem' as passo_3;
SELECT '4. Verificar Console: Abra F12 e veja se h√° erros durante os testes' as passo_4; 